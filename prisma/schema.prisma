// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    emailAddress String  @unique
    firstName    String?
    lastName     String?

    imageUrl String?

    credits Int @default(150)

    userToProjects UserToProject[]
    askedQuestions Question[]
}

model Project {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name      String
    githubUrl String
    language  String?

    deletedAt DateTime?

    userToProjects       UserToProject[]
    commits              Commit[]
    sourceCodeEmbeddings SourceCodeEmbedding[]

    savedQuestions Question[]
}

model UserToProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId    String
    projectId String

    user    User    @relation(fields: [userId], references: [id])
    project Project @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    absEmbedding Unsupported("vector(768)")?
    absString    String?

    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}

model Commit {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    commitMessage      String
    commitHash         String
    commitAuthorName   String
    commitAuthorAvatar String
    commitDate         DateTime

    //AI Summary
    summary String?
}

model Question {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    fileReferences Json?

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    question String
    answer   String

    userId String
    user   User   @relation(fields: [userId], references: [id])
}
